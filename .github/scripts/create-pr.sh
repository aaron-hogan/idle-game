#!/bin/bash
# AI-assistant PR creation script with validation

# Default values
DRAFT=false
BASE_BRANCH="main"
SKIP_STASH_CHECK=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --draft)
      DRAFT=true
      shift
      ;;
    --base)
      BASE_BRANCH="$2"
      shift 2
      ;;
    --skip-check)
      SKIP_STASH_CHECK=true
      shift
      ;;
    *)
      # Skip unknown options
      shift
      ;;
  esac
done

# Validate branch exists and isn't main
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" = "main" ]; then
  echo "ERROR: Cannot create PR from main branch"
  exit 1
fi

# Verify branch name pattern
if [[ ! "$CURRENT_BRANCH" =~ ^(feature|fix|docs|refactor|ci|chore|test)/[a-z0-9-]+$ ]]; then
  echo "ERROR: Branch name doesn't follow required pattern"
  exit 1
fi

# Check for uncommitted changes
if [ "$SKIP_STASH_CHECK" = false ]; then
  if ! git diff --quiet || ! git diff --cached --quiet; then
    echo "WARNING: You have uncommitted changes that won't be included in this PR."
    echo "Do you want to continue without including these changes? (y/n)"
    read -r CONTINUE
    
    if [[ ! "$CONTINUE" =~ ^[Yy]$ ]]; then
      echo "PR creation canceled. Please commit your changes first."
      exit 1
    fi
    
    echo "Proceeding without uncommitted changes..."
  fi
fi

# Create PR with standardized format
BRANCH_TYPE=$(echo "$CURRENT_BRANCH" | cut -d/ -f1)
BRANCH_DESC=$(echo "$CURRENT_BRANCH" | cut -d/ -f2 | tr '-' ' ')
PR_TITLE="$BRANCH_TYPE: $(echo "$BRANCH_DESC" | sed 's/\b\(.\)/\u\1/g')"

# Build PR creation command
PR_CMD="gh pr create --title \"$PR_TITLE\" --base \"$BASE_BRANCH\""

# Add draft flag if requested
if [ "$DRAFT" = true ]; then
  PR_CMD="$PR_CMD --draft"
  echo "Creating draft PR from $CURRENT_BRANCH to $BASE_BRANCH"
else
  echo "Creating PR from $CURRENT_BRANCH to $BASE_BRANCH"
fi

# Create PR body
PR_BODY="## Changes
$(git log --pretty=format:'* %s' $BASE_BRANCH..$CURRENT_BRANCH | grep -v 'Merge')

## Checklist
- [ ] Tests added/updated
- [ ] Documentation updated
- [ ] CHANGELOG.md updated

Generated by Claude"

# Execute PR creation
eval "$PR_CMD --body \"$PR_BODY\""

if [ $? -eq 0 ]; then
  # Get PR number and display information
  PR_URL=$(gh pr view --json url --jq '.url')
  PR_NUMBER=$(gh pr view --json number --jq '.number')
  echo "PR #$PR_NUMBER created successfully with title: $PR_TITLE"
  echo "URL: $PR_URL"
  
  if [ "$DRAFT" = true ]; then
    echo "PR created as draft - mark as ready for review when finished"
  fi
else
  echo "ERROR: Failed to create PR"
  exit 1
fi