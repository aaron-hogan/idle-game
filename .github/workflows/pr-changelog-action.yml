name: PR Changelog Helper

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches: [main]

jobs:
  check-and-create-changelog:
    name: Check and Create Changelog Entry
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create .changelog directory if needed
        run: mkdir -p .changelog
      
      - name: Check for changelog entry
        id: check-changelog
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          # Check if changelog file for this PR already exists
          if [ -f ".changelog/pr-${PR_NUMBER}.md" ]; then
            echo "found_changelog=true" >> $GITHUB_OUTPUT
            echo "Changelog file .changelog/pr-${PR_NUMBER}.md already exists"
            exit 0
          fi
          
          # Check for Changelog Entry section in PR description
          # We'll check for several common patterns
          CHANGELOG_PATTERNS=(
            "## Changelog Entry"
            "## Changelog"
            "## CHANGELOG"
            "### Changelog"
          )
          
          for PATTERN in "${CHANGELOG_PATTERNS[@]}"; do
            if echo "$PR_BODY" | grep -q "$PATTERN"; then
              echo "Found Changelog section in PR description"
              echo "found_changelog=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          
          echo "No changelog entry found in dedicated file or PR description"
          echo "found_changelog=false" >> $GITHUB_OUTPUT
      
      - name: Generate fallback changelog file
        if: steps.check-changelog.outputs.found_changelog == 'false'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Generate entry based on PR title
          if [[ "$PR_TITLE" =~ ^[Ff][Ee][Aa][Tt][:\(] ]]; then
            DESCRIPTION=$(echo "$PR_TITLE" | sed -E 's/^[Ff][Ee][Aa][Tt][:\(] ?//')
            echo "### Added" > .changelog/pr-${PR_NUMBER}.md
            echo "- $DESCRIPTION" >> .changelog/pr-${PR_NUMBER}.md
          elif [[ "$PR_TITLE" =~ ^[Ff][Ii][Xx][:\(] ]]; then
            DESCRIPTION=$(echo "$PR_TITLE" | sed -E 's/^[Ff][Ii][Xx][:\(] ?//')
            echo "### Fixed" > .changelog/pr-${PR_NUMBER}.md
            echo "- $DESCRIPTION" >> .changelog/pr-${PR_NUMBER}.md
          else
            DESCRIPTION=$(echo "$PR_TITLE" | sed -E 's/^[^:]*: ?//')
            echo "### Changed" > .changelog/pr-${PR_NUMBER}.md
            echo "- $DESCRIPTION" >> .changelog/pr-${PR_NUMBER}.md
          fi
          
          echo "Created fallback changelog file .changelog/pr-${PR_NUMBER}.md"
          cat .changelog/pr-${PR_NUMBER}.md
      
      - name: Commit changelog file if created
        if: steps.check-changelog.outputs.found_changelog == 'false'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add .changelog/pr-${PR_NUMBER}.md
          git commit -m "chore: add changelog entry for PR #${PR_NUMBER}"
          git push
      
      - name: Comment on PR if changelog entry created
        if: steps.check-changelog.outputs.found_changelog == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üìù **Changelog Entry Created**
              
              A fallback changelog entry has been generated based on your PR title. You can:
              
              1. Edit it directly in the [.changelog/pr-${context.payload.pull_request.number}.md](.changelog/pr-${context.payload.pull_request.number}.md) file
              2. Or add a properly formatted changelog section to your PR description:
              
              \`\`\`markdown
              ## Changelog Entry
              
              ### Added
              - New feature description
              
              ### Fixed
              - Bug fix description
              \`\`\`
              
              The generated changelog entry will be included in CHANGELOG.md when this PR is merged.`
            })
      
      - name: Add info comment for first-time PRs
        if: github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üìä Changelog Guidelines
              
              For your changes to be properly documented in the CHANGELOG.md, ensure:
              
              1. **PR Title**: Follows conventional format (feat:, fix:, docs:, etc.)
              2. **Changelog Entry**: Use one of these options (in order of reliability):
              
                 a. Create a file: \`.changelog/pr-${context.payload.pull_request.number}.md\` with proper sections
                 b. Include a section \`## Changelog Entry\` in this PR description
                 c. Rely on automatic fallback based on PR title (least recommended)
              
              Need help? The [.changelog/README.md](.changelog/README.md) file contains detailed instructions.
              `
            })